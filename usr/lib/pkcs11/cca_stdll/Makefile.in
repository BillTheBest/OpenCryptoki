# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile.am for common functions for openCryptoki
# Michael A. Halcrow <mhalcrow@us.ibm.com>


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = usr/lib/pkcs11/cca_stdll
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(nobase_lib_LTLIBRARIES)
opencryptoki_stdll_libpkcs11_cca_la_LIBADD =
am_opencryptoki_stdll_libpkcs11_cca_la_OBJECTS =  \
	opencryptoki_stdll_libpkcs11_cca_la-asn1.lo \
	opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo \
	opencryptoki_stdll_libpkcs11_cca_la-log.lo \
	opencryptoki_stdll_libpkcs11_cca_la-key.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo \
	opencryptoki_stdll_libpkcs11_cca_la-new_host.lo \
	opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-cert.lo \
	opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo \
	opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-template.lo \
	opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo \
	opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo \
	opencryptoki_stdll_libpkcs11_cca_la-object.lo \
	opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-globals.lo \
	opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo \
	opencryptoki_stdll_libpkcs11_cca_la-utility.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo \
	opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo \
	opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo \
	opencryptoki_stdll_libpkcs11_cca_la-p11util.lo \
	opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo
opencryptoki_stdll_libpkcs11_cca_la_OBJECTS =  \
	$(am_opencryptoki_stdll_libpkcs11_cca_la_OBJECTS)
opencryptoki_stdll_libpkcs11_cca_la_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) \
	$(opencryptoki_stdll_libpkcs11_cca_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am__dirstamp = $(am__leading_dot)dirstamp
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(opencryptoki_stdll_libpkcs11_cca_la_SOURCES)
DIST_SOURCES = $(opencryptoki_stdll_libpkcs11_cca_la_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AEP_LIBS = @AEP_LIBS@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAT = @CAT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHGRP = @CHGRP@
CHMOD = @CHMOD@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GROUPADD = @GROUPADD@
HAVE_EXPECT = @HAVE_EXPECT@
ID = @ID@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICA_CFLAGS = @LIBICA_CFLAGS@
LIBICA_LIBS = @LIBICA_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_CFLAGS = @OPENSSL_CFLAGS@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SCC_CFLAGS = @SCC_CFLAGS@
SCC_LIBS = @SCC_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKETARMOR_CFLAGS = @SOCKETARMOR_CFLAGS@
SOCKETARMOR_LIBS = @SOCKETARMOR_LIBS@
STRIP = @STRIP@
TSS_CFLAGS = @TSS_CFLAGS@
TSS_LIBS = @TSS_LIBS@
UBSEC_CFLAGS = @UBSEC_CFLAGS@
UBSEC_LIBS = @UBSEC_LIBS@
USERMOD = @USERMOD@
VERSION = @VERSION@
XCRYPTOLINZ_CFLAGS = @XCRYPTOLINZ_CFLAGS@
XCRYPTOLINZ_LIBS = @XCRYPTOLINZ_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#
# The PKCS#11 STDLL library
#
nobase_lib_LTLIBRARIES = opencryptoki/stdll/libpkcs11_cca.la

# Not all versions of automake observe libname_CFLAGS
opencryptoki_stdll_libpkcs11_cca_la_CFLAGS = -DLINUX -DSPINXPL -DNOCDMF	\
	-DNODSA -DNODH -DNOECB						\
	-I. -I../../../include	-I../../../include/pkcs11 -I../common	\
	-DSTDLL_NAME=\"ccatok\"

opencryptoki_stdll_libpkcs11_cca_la_LDFLAGS = -shared -Wl,-Bsymbolic	\
	-lcrypto -lpthread -nostartfiles -Wl,-soname,$@

opencryptoki_stdll_libpkcs11_cca_la_SOURCES = asn1.c			\
					      ../common/dig_mgr.c	\
					      ../common/hwf_obj.c	\
					      ../common/log.c		\
					      key.c			\
					      mech_dh.c			\
					      ../common/mech_rng.c	\
					      new_host.c		\
					      sign_mgr.c		\
					      ../common/cert.c		\
					      ../common/dp_obj.c	\
					      mech_aes.c		\
					      mech_rsa.c		\
					      ../common/obj_mgr.c	\
					      ../common/template.c	\
					      ../common/data_obj.c	\
					      ../common/encr_mgr.c		\
					      key_mgr.c			\
					      ../common/mech_md2.c	\
					      mech_sha.c		\
					      ../common/object.c	\
					      decr_mgr.c		\
					      globals.c			\
					      loadsave.c		\
					      utility.c			\
					      mech_des.c		\
					      mech_des3.c		\
					      ../common/mech_md5.c	\
					      ../common/mech_ssl3.c	\
					      ../common/sess_mgr.c	\
					      verify_mgr.c		\
					      ../common/p11util.c	\
					      cca_specific.c

noinst_HEADERS = h_extern.h tok_spec_struct.h defs.h csulincl.h		\
		 host_defs.h cca_stdll.h tok_specific.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign usr/lib/pkcs11/cca_stdll/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign usr/lib/pkcs11/cca_stdll/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-nobase_libLTLIBRARIES: $(nobase_lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(nobase_lib_LTLIBRARIES)'; test -n "$(libdir)"  || list=; \
	for p in $$list; do if test -f "$$p"; then echo "$$p $$p"; else :; fi; done | \
	sed '/ .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
	$(AWK) 'BEGIN { cur = "." } \
	  { if ($$2 == cur) { files = files " " $$1 } \
	    else { print cur, files; files = $$1; cur = $$2 } } \
	  END { print cur, files }' | \
	while read dir files; do \
	  test -z "$$files" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(libdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(libdir)/$$dir"; }; \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$files '$(DESTDIR)$(libdir)/$$dir'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$files "$(DESTDIR)$(libdir)/$$dir" || exit $$?; \
	  }; \
	done

uninstall-nobase_libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  f=$$p; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-nobase_libLTLIBRARIES:
	-test -z "$(nobase_lib_LTLIBRARIES)" || rm -f $(nobase_lib_LTLIBRARIES)
	@list='$(nobase_lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
opencryptoki/stdll/$(am__dirstamp):
	@$(MKDIR_P) opencryptoki/stdll
	@: > opencryptoki/stdll/$(am__dirstamp)
opencryptoki/stdll/libpkcs11_cca.la: $(opencryptoki_stdll_libpkcs11_cca_la_OBJECTS) $(opencryptoki_stdll_libpkcs11_cca_la_DEPENDENCIES) opencryptoki/stdll/$(am__dirstamp)
	$(opencryptoki_stdll_libpkcs11_cca_la_LINK) -rpath $(libdir)/opencryptoki/stdll $(opencryptoki_stdll_libpkcs11_cca_la_OBJECTS) $(opencryptoki_stdll_libpkcs11_cca_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-asn1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cca_specific.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-data_obj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dp_obj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-globals.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-loadsave.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-log.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_aes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des3.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_dh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rng.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_sha.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-new_host.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-p11util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-template.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-utility.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

opencryptoki_stdll_libpkcs11_cca_la-asn1.lo: asn1.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-asn1.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-asn1.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-asn1.lo `test -f 'asn1.c' || echo '$(srcdir)/'`asn1.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-asn1.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-asn1.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='asn1.c' object='opencryptoki_stdll_libpkcs11_cca_la-asn1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-asn1.lo `test -f 'asn1.c' || echo '$(srcdir)/'`asn1.c

opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo: ../common/dig_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo `test -f '../common/dig_mgr.c' || echo '$(srcdir)/'`../common/dig_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/dig_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-dig_mgr.lo `test -f '../common/dig_mgr.c' || echo '$(srcdir)/'`../common/dig_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo: ../common/hwf_obj.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo `test -f '../common/hwf_obj.c' || echo '$(srcdir)/'`../common/hwf_obj.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/hwf_obj.c' object='opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-hwf_obj.lo `test -f '../common/hwf_obj.c' || echo '$(srcdir)/'`../common/hwf_obj.c

opencryptoki_stdll_libpkcs11_cca_la-log.lo: ../common/log.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-log.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-log.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-log.lo `test -f '../common/log.c' || echo '$(srcdir)/'`../common/log.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-log.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-log.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/log.c' object='opencryptoki_stdll_libpkcs11_cca_la-log.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-log.lo `test -f '../common/log.c' || echo '$(srcdir)/'`../common/log.c

opencryptoki_stdll_libpkcs11_cca_la-key.lo: key.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-key.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-key.lo `test -f 'key.c' || echo '$(srcdir)/'`key.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='key.c' object='opencryptoki_stdll_libpkcs11_cca_la-key.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-key.lo `test -f 'key.c' || echo '$(srcdir)/'`key.c

opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo: mech_dh.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_dh.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo `test -f 'mech_dh.c' || echo '$(srcdir)/'`mech_dh.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_dh.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_dh.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_dh.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_dh.lo `test -f 'mech_dh.c' || echo '$(srcdir)/'`mech_dh.c

opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo: ../common/mech_rng.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rng.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo `test -f '../common/mech_rng.c' || echo '$(srcdir)/'`../common/mech_rng.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rng.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rng.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/mech_rng.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_rng.lo `test -f '../common/mech_rng.c' || echo '$(srcdir)/'`../common/mech_rng.c

opencryptoki_stdll_libpkcs11_cca_la-new_host.lo: new_host.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-new_host.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-new_host.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-new_host.lo `test -f 'new_host.c' || echo '$(srcdir)/'`new_host.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-new_host.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-new_host.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='new_host.c' object='opencryptoki_stdll_libpkcs11_cca_la-new_host.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-new_host.lo `test -f 'new_host.c' || echo '$(srcdir)/'`new_host.c

opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo: sign_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo `test -f 'sign_mgr.c' || echo '$(srcdir)/'`sign_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sign_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-sign_mgr.lo `test -f 'sign_mgr.c' || echo '$(srcdir)/'`sign_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-cert.lo: ../common/cert.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-cert.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cert.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-cert.lo `test -f '../common/cert.c' || echo '$(srcdir)/'`../common/cert.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cert.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cert.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/cert.c' object='opencryptoki_stdll_libpkcs11_cca_la-cert.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-cert.lo `test -f '../common/cert.c' || echo '$(srcdir)/'`../common/cert.c

opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo: ../common/dp_obj.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dp_obj.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo `test -f '../common/dp_obj.c' || echo '$(srcdir)/'`../common/dp_obj.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dp_obj.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-dp_obj.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/dp_obj.c' object='opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-dp_obj.lo `test -f '../common/dp_obj.c' || echo '$(srcdir)/'`../common/dp_obj.c

opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo: mech_aes.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_aes.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo `test -f 'mech_aes.c' || echo '$(srcdir)/'`mech_aes.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_aes.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_aes.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_aes.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_aes.lo `test -f 'mech_aes.c' || echo '$(srcdir)/'`mech_aes.c

opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo: mech_rsa.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo `test -f 'mech_rsa.c' || echo '$(srcdir)/'`mech_rsa.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_rsa.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_rsa.lo `test -f 'mech_rsa.c' || echo '$(srcdir)/'`mech_rsa.c

opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo: ../common/obj_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo `test -f '../common/obj_mgr.c' || echo '$(srcdir)/'`../common/obj_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/obj_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-obj_mgr.lo `test -f '../common/obj_mgr.c' || echo '$(srcdir)/'`../common/obj_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-template.lo: ../common/template.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-template.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-template.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-template.lo `test -f '../common/template.c' || echo '$(srcdir)/'`../common/template.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-template.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-template.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/template.c' object='opencryptoki_stdll_libpkcs11_cca_la-template.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-template.lo `test -f '../common/template.c' || echo '$(srcdir)/'`../common/template.c

opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo: ../common/data_obj.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-data_obj.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo `test -f '../common/data_obj.c' || echo '$(srcdir)/'`../common/data_obj.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-data_obj.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-data_obj.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/data_obj.c' object='opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-data_obj.lo `test -f '../common/data_obj.c' || echo '$(srcdir)/'`../common/data_obj.c

opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo: ../common/encr_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo `test -f '../common/encr_mgr.c' || echo '$(srcdir)/'`../common/encr_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/encr_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-encr_mgr.lo `test -f '../common/encr_mgr.c' || echo '$(srcdir)/'`../common/encr_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo: key_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo `test -f 'key_mgr.c' || echo '$(srcdir)/'`key_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-key_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='key_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-key_mgr.lo `test -f 'key_mgr.c' || echo '$(srcdir)/'`key_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo: ../common/mech_md2.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md2.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo `test -f '../common/mech_md2.c' || echo '$(srcdir)/'`../common/mech_md2.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md2.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md2.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/mech_md2.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_md2.lo `test -f '../common/mech_md2.c' || echo '$(srcdir)/'`../common/mech_md2.c

opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo: mech_sha.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_sha.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo `test -f 'mech_sha.c' || echo '$(srcdir)/'`mech_sha.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_sha.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_sha.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_sha.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_sha.lo `test -f 'mech_sha.c' || echo '$(srcdir)/'`mech_sha.c

opencryptoki_stdll_libpkcs11_cca_la-object.lo: ../common/object.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-object.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-object.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-object.lo `test -f '../common/object.c' || echo '$(srcdir)/'`../common/object.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-object.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-object.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/object.c' object='opencryptoki_stdll_libpkcs11_cca_la-object.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-object.lo `test -f '../common/object.c' || echo '$(srcdir)/'`../common/object.c

opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo: decr_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo `test -f 'decr_mgr.c' || echo '$(srcdir)/'`decr_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='decr_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-decr_mgr.lo `test -f 'decr_mgr.c' || echo '$(srcdir)/'`decr_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-globals.lo: globals.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-globals.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-globals.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-globals.lo `test -f 'globals.c' || echo '$(srcdir)/'`globals.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-globals.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-globals.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='globals.c' object='opencryptoki_stdll_libpkcs11_cca_la-globals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-globals.lo `test -f 'globals.c' || echo '$(srcdir)/'`globals.c

opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo: loadsave.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-loadsave.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo `test -f 'loadsave.c' || echo '$(srcdir)/'`loadsave.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-loadsave.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-loadsave.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='loadsave.c' object='opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-loadsave.lo `test -f 'loadsave.c' || echo '$(srcdir)/'`loadsave.c

opencryptoki_stdll_libpkcs11_cca_la-utility.lo: utility.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-utility.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-utility.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-utility.lo `test -f 'utility.c' || echo '$(srcdir)/'`utility.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-utility.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-utility.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utility.c' object='opencryptoki_stdll_libpkcs11_cca_la-utility.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-utility.lo `test -f 'utility.c' || echo '$(srcdir)/'`utility.c

opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo: mech_des.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo `test -f 'mech_des.c' || echo '$(srcdir)/'`mech_des.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_des.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_des.lo `test -f 'mech_des.c' || echo '$(srcdir)/'`mech_des.c

opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo: mech_des3.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des3.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo `test -f 'mech_des3.c' || echo '$(srcdir)/'`mech_des3.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des3.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_des3.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mech_des3.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_des3.lo `test -f 'mech_des3.c' || echo '$(srcdir)/'`mech_des3.c

opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo: ../common/mech_md5.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md5.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo `test -f '../common/mech_md5.c' || echo '$(srcdir)/'`../common/mech_md5.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md5.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_md5.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/mech_md5.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_md5.lo `test -f '../common/mech_md5.c' || echo '$(srcdir)/'`../common/mech_md5.c

opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo: ../common/mech_ssl3.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo `test -f '../common/mech_ssl3.c' || echo '$(srcdir)/'`../common/mech_ssl3.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/mech_ssl3.c' object='opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-mech_ssl3.lo `test -f '../common/mech_ssl3.c' || echo '$(srcdir)/'`../common/mech_ssl3.c

opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo: ../common/sess_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo `test -f '../common/sess_mgr.c' || echo '$(srcdir)/'`../common/sess_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/sess_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-sess_mgr.lo `test -f '../common/sess_mgr.c' || echo '$(srcdir)/'`../common/sess_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo: verify_mgr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo `test -f 'verify_mgr.c' || echo '$(srcdir)/'`verify_mgr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='verify_mgr.c' object='opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-verify_mgr.lo `test -f 'verify_mgr.c' || echo '$(srcdir)/'`verify_mgr.c

opencryptoki_stdll_libpkcs11_cca_la-p11util.lo: ../common/p11util.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-p11util.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-p11util.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-p11util.lo `test -f '../common/p11util.c' || echo '$(srcdir)/'`../common/p11util.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-p11util.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-p11util.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../common/p11util.c' object='opencryptoki_stdll_libpkcs11_cca_la-p11util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-p11util.lo `test -f '../common/p11util.c' || echo '$(srcdir)/'`../common/p11util.c

opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo: cca_specific.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -MT opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo -MD -MP -MF $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cca_specific.Tpo -c -o opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo `test -f 'cca_specific.c' || echo '$(srcdir)/'`cca_specific.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cca_specific.Tpo $(DEPDIR)/opencryptoki_stdll_libpkcs11_cca_la-cca_specific.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cca_specific.c' object='opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(opencryptoki_stdll_libpkcs11_cca_la_CFLAGS) $(CFLAGS) -c -o opencryptoki_stdll_libpkcs11_cca_la-cca_specific.lo `test -f 'cca_specific.c' || echo '$(srcdir)/'`cca_specific.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf opencryptoki/stdll/.libs opencryptoki/stdll/_libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f opencryptoki/stdll/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-nobase_libLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-nobase_libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-data-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-nobase_libLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-hook install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_libLTLIBRARIES \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am uninstall-hook \
	uninstall-nobase_libLTLIBRARIES


install-data-hook:
	cd $(DESTDIR)/$(libdir)/opencryptoki/stdll && \
		ln -sf libpkcs11_cca.so PKCS11_CCA.so
	$(MKDIR_P) $(DESTDIR)$(localstatedir)/lib/opencryptoki/ccatok

uninstall-hook:
	if test -d $(DESTDIR)/$(libdir)/opencryptoki/stdll; then \
		cd $(DESTDIR)/$(libdir)/opencryptoki/stdll && \
		rm -f PKCS11_CCA.so; fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
